Import('env')

env_thirdparty = env.Clone()

env_thirdparty.Append(CXXFLAGS=["-std=c++20"])

if env["disable_exceptions"]:
    # If exceptions were disabled, we have to undo this when compiling the thirdparty code.
    if env.msvc:
        env_thirdparty["CPPDEFINES"] = [x for x in env_thirdparty["CPPDEFINES"] if "_HAS_EXCEPTIONS" not in x]
        env_thirdparty.Append(CCFLAGS=["/EHsc"])
    else:
        env_thirdparty["CCFLAGS"] = [x for x in env_thirdparty["CCFLAGS"] if "-fno-exceptions" not in x]

# Add all .cpp files in the current directory to the environment
src_list = [
    "#modules/riscv/thirdparty/libriscv/lib/libriscv/cpu.cpp",
    "#modules/riscv/thirdparty/libriscv/lib/libriscv/debug.cpp",
    "#modules/riscv/thirdparty/libriscv/lib/libriscv/decode_bytecodes.cpp",
    "#modules/riscv/thirdparty/libriscv/lib/libriscv/decoder_cache.cpp",
    "#modules/riscv/thirdparty/libriscv/lib/libriscv/machine.cpp",
    "#modules/riscv/thirdparty/libriscv/lib/libriscv/machine_defaults.cpp",
    "#modules/riscv/thirdparty/libriscv/lib/libriscv/memory.cpp",
    "#modules/riscv/thirdparty/libriscv/lib/libriscv/memory_elf.cpp",
    "#modules/riscv/thirdparty/libriscv/lib/libriscv/memory_mmap.cpp",
    "#modules/riscv/thirdparty/libriscv/lib/libriscv/memory_rw.cpp",
    "#modules/riscv/thirdparty/libriscv/lib/libriscv/multiprocessing.cpp",
    "#modules/riscv/thirdparty/libriscv/lib/libriscv/native_libc.cpp",
    "#modules/riscv/thirdparty/libriscv/lib/libriscv/rv64i.cpp",
    "#modules/riscv/thirdparty/libriscv/lib/libriscv/native_threads.cpp",
    "#modules/riscv/thirdparty/libriscv/lib/libriscv/posix/minimal.cpp",
    "#modules/riscv/thirdparty/libriscv/lib/libriscv/posix/signals.cpp",
    "#modules/riscv/thirdparty/libriscv/lib/libriscv/posix/threads.cpp",
    "#modules/riscv/thirdparty/libriscv/lib/libriscv/posix/socket_calls.cpp",
    "#modules/riscv/thirdparty/libriscv/lib/libriscv/serialize.cpp",
    "#modules/riscv/thirdparty/libriscv/lib/libriscv/util/crc32c.cpp",
    "#modules/riscv/riscv.cpp",
    "#modules/riscv/register_types.cpp",
]

if env_thirdparty['platform'] == 'osx':
    pass

env_thirdparty.add_source_files(env.modules_sources, src_list)

# Specify the include directories
env_thirdparty.Append(CPPPATH=["#modules/riscv", "thirdparty/libriscv/lib", "thirdparty/libriscv/lib/libriscv/linux", "thirdparty/libriscv/lib/libriscv/posix", "thirdparty/libriscv/lib/libriscv/util"])
env_thirdparty.Append(CPPDEFINES=["_DARWIN_C_SOURCE"])
